<h1 id="title">Ember CLI Push.js Shim</h1>
<h3>Add native javascript <a href="https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API">Notifications</a> to your application</h3>

<div class="button-wrapper">
<a href="https://github.com/chrism/ember-cli-push-js-shim" class="button github"><svg aria-hidden="true" class="octicon-mark-github" width="20px" height="20px" viewBox="0 0 16 16"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z"></path></svg>View on Github</a>

<a href="https://www.npmjs.com/package/ember-cli-push-js-shim" class="button npm"><svg aria-hidden="true" class="npm-mark" width="36px" height="14px" viewBox="0 0 18 7"><path class="outline" d="M0,0v6h5v1h4v-1h9v-6"/><path class="interior" d="M1,1v4h2v-3h1v3h1v-4h1v5h2v-4h1v2h-1v1h2v-4h1v4h2v-3h1v3h1v-3h1v3h1v-4"/></svg>View on NPM</a>
</div>


<hr />

<h2>Installation</h2>

<p>You can install it like a standard Ember addon. This brings in the <a href="https://nickersoft.github.io/push.js/">Push.js</a> dependency and makes it available as an ES6 style import</p>

{{code-snippet name="installation" id="installation-code"}}

<hr />

<h2>Creating Notifications</h2>

<p>Here is a simple example showing how to display a notification</p>

{{code-snippet name="simple-notification.js" id="simple-notification-code"}}

<button id="notification-button" class="primary" {{action "createNotification"}}>Fire Notification</button>

<hr />

<h2>Closing Notifications</h2>

<p>You can close notifications in two ways, either by giving the notifcation a tag</p>

{{code-snippet name="close-notification.js" id="close-notification-code"}}

<button id="notification-tag-button" class="primary" {{action "createTaggedNotification"}}>Fire Tagged Notification</button>
<button id="close-notification-tag-button" {{action "closeTaggedNotification"}}>Close Tagged Notification</button>

<p>Or by storing a reference to the promise created</p>

{{code-snippet name="close-promise-notification.js" id="close-promise-notification-code"}}

<button id="notification-promise-button" class="primary" {{action "createPromiseNotification"}}>Fire Promise Notification</button>
<button id="close-notification-promise-button" {{action "closePromiseNotification"}}>Close Promise Notification</button>

<hr />

<h2>Closing All Notifications</h2>

<p>You can clear all notifications with one method</p>

{{code-snippet name="close-all-notification.js" id="close-all-notification-code"}}

<button id="notification-multiple-button" class="primary" {{action "createMultipleNotification"}}>Fire Multiple Notifications</button>
<button id="close-all-notification-button" {{action "closeAllNotification"}}>Close All Notifications</button>

<hr />

<h2>Options</h2>

<p>In addition to the required title there are also several options</p>

<ul class="options">
  <li><strong>body:</strong> The body text of the notification</li>
  <li><strong>icon:</strong> Can be either the URL to an icon image or an array containing 16x16 and 32x32 pixel icon images</li>
  <li><strong>onClick:</strong> Callback to execute when the notification is clicked</li>
  <li><strong>onClose:</strong> Callback to execute when the notification is closed (obsolete)</li>
  <li><strong>onError:</strong> Callback to execute when if the notification throws an error</li>
  <li><strong>onShow:</strong> Callback to execute when the notification is shown (obsolete)</li>
  <li><strong>tag:</strong> Unique tag used to identify the notification. Can be used to later close the notification manually</li>
  <li><strong>timeout:</strong> Time in milliseconds until notification closes automatically</li>
  <li><strong>vibrate:</strong> An array of durations for a mobile device receiving the notification to vibrate. For example, [200, 100] would vibrate first for 200 milliseconds, pause, then continue for 100 milliseconds</li>
</ul>

<p>For example here is a notification which times out after 2 seconds with a description and an image</p>

{{code-snippet name="create-options-notification.js" id="create-options-notification-code"}}

<button id="notification-option-button" class="primary" {{action "createOptionsNotification"}}>Fire Options Notification</button>

<hr />

<h2>Further Information</h2>

<p>See <a href="https://nickersoft.github.io/push.js/">Push.js</a> for more details, or the <a href="https://github.com/chrism/ember-cli-push-js-shim">Github repo for this project</a></p>